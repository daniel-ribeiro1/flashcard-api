// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model User {
  id String @id @db.Char(36) @default(uuid())
  first_name String @db.VarChar(255)
  last_name String @db.VarChar(255)
  picture String? 
  email String @db.VarChar(255) @unique 
  password String @db.VarChar(255)
  deleted Boolean @default(false)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  // Relations
  decks Deck[]
  created_categories Category[]
}

model Deck {
  id String @db.Char(36) @id @default(uuid())
  title String @db.VarChar(255)
  description String? 
  deleted Boolean @default(false)
  author_id String @db.Char(36)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  // Relations
  cards Card[]
  deck_categories DeckCategory[]
  author User @relation(fields: [author_id], references: [id])
}

model Card {
  id String @db.Char(36) @id @default(uuid())
  front String @db.VarChar(255)
  back String @db.VarChar(255)
  revision_date DateTime
  deleted Boolean @default(false)
  deck_id String @db.Char(36)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  // Relations
  deck Deck @relation(fields: [deck_id], references: [id])
}

model Category {
  id Int @id @db.Integer @default(autoincrement())
  name String @db.VarChar(255)
  deleted Boolean @default(false)
  creator_id String @db.Char(36)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  // Relations
  deck_categories DeckCategory[]
  created_by User @relation(fields: [creator_id], references: [id])
}

model DeckCategory {
  deck_id String @db.Char(36)
  category_id Int @db.Integer
  @@id([deck_id, category_id])
  // Relations
  deck Deck @relation(fields: [deck_id], references: [id])
  category Category @relation(fields: [category_id], references: [id])
}