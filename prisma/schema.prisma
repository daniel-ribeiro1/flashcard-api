// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model User {
  id                String     @id @default(uuid()) @db.Char(36)
  firstName         String     @db.VarChar(255)
  lastName          String     @db.VarChar(255)
  picture           String?
  email             String     @unique @db.VarChar(255)
  password          String     @db.VarChar(255)
  deleted           Boolean    @default(false)
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
  // Relations
  decks             Deck[]
  createdCategories Category[]
  Card              Card[]
}

model Deck {
  id             String         @id @default(uuid()) @db.Char(36)
  title          String         @db.VarChar(255)
  description    String?
  deleted        Boolean        @default(false)
  authorId       String         @db.Char(36)
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  // Relations
  cards          Card[]
  deckCategories DeckCategory[]
  author         User           @relation(fields: [authorId], references: [id])
}

model Card {
  id           String   @id @default(uuid()) @db.Char(36)
  front        String   @db.VarChar(255)
  back         String   @db.VarChar(255)
  revisionDate DateTime
  level        Int
  deleted      Boolean  @default(false)
  deckId       String   @db.Char(36)
  authorId     String   @db.Char(36)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  // Relations
  deck         Deck     @relation(fields: [deckId], references: [id])
  author       User     @relation(fields: [authorId], references: [id])
}

model Category {
  id             Int            @id @default(autoincrement()) @db.Integer
  name           String         @db.VarChar(255)
  deleted        Boolean        @default(false)
  authorId       String         @db.Char(36)
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  // Relations
  deckCategories DeckCategory[]
  createdBy      User           @relation(fields: [authorId], references: [id])
}

model DeckCategory {
  deckId     String   @db.Char(36)
  categoryId Int      @db.Integer
  // Relations
  deck       Deck     @relation(fields: [deckId], references: [id], onDelete: Cascade)
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@id([deckId, categoryId])
}
